import { resolveImport } from './resolveImport/index.js';
export const resolveAllImports = (params) => {
    const { snippets, fileWithImports } = params;
    let content = fileWithImports.content;
    fileWithImports.imports.forEach((importNode) => {
        if (!importNode.source.startsWith('/snippets/')) {
            console.log(`Invalid import path ${importNode.source} in ${fileWithImports.filename}. Import source must start with "/snippets/".`);
            return;
        }
        const importedSnippet = snippets.find((snippet) => snippet.filename === importNode.source);
        if (importedSnippet == undefined) {
            console.log(`Could not find file ${importNode.source} - imported from ${fileWithImports.filename}`);
            return;
        }
        importNode.specifiers.forEach((specifier) => {
            var _a;
            try {
                content = (_a = resolveImport(specifier, content, importedSnippet.content)) !== null && _a !== void 0 ? _a : content;
            }
            catch (err) {
                console.log(`Error resolving import "${specifier.name}" in ${fileWithImports.filename}`);
            }
        });
    });
    return content;
};
