import * as path from 'path';
import { getFileList } from '../fs/index.js';
import { getFileExtension, openApiCheck } from '../utils.js';
export const categorizeFiles = async (contentDirectoryPath) => {
    const allFilesInCmdExecutionPath = getFileList(contentDirectoryPath);
    const contentFilenames = [];
    const staticFilenames = [];
    const openApiFiles = [];
    const snippets = [];
    const snippetsV2 = [];
    for await (const filename of allFilesInCmdExecutionPath) {
        const extension = getFileExtension(filename);
        let isOpenApi = false;
        switch (extension) {
            case 'mdx':
            case 'md':
                if (filename.startsWith('/_snippets/')) {
                    snippets.push(filename);
                    break;
                }
                if (filename.startsWith('/snippets/')) {
                    snippetsV2.push(filename);
                    break;
                }
                contentFilenames.push(filename);
                break;
            case 'json':
            case 'yaml':
            case 'yml':
                const openApiInfo = await openApiCheck(path.join(contentDirectoryPath, filename));
                isOpenApi = openApiInfo.isOpenApi;
                if (!isOpenApi || !openApiInfo.spec) {
                    break;
                }
                const fileName = path.parse(filename).base;
                openApiFiles.push({
                    filename: fileName.substring(0, fileName.lastIndexOf('.')),
                    spec: openApiInfo.spec,
                });
                break;
            default:
                staticFilenames.push(filename);
        }
    }
    return { contentFilenames, staticFilenames, openApiFiles, snippets, snippetsV2 };
};
